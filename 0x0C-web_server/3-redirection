#!/usr/bin/env bash
# Production-ready Nginx setup script with backup function

# Function to create a backup of a file
#backup_file() {
#    local file="$1"
#    local backup_suffix=".backup-$(date +%Y%m%d%H%M%S)"

#    if [ -e "$file" ]; then
#        sudo cp "$file" "$file$backup_suffix"
#        echo "Backup created for $file as $file$backup_suffix"
#    else
#        echo "File $file not found, skipping backup"
#    fi
#}

# Check for and create backups of existing Nginx configuration files
#backup_file "/etc/nginx/nginx.conf"
#backup_file "/etc/nginx/sites-available/default"
# Update package lists to get the latest package information
sudo apt-get -y update

# Install Nginx with the '-y' option to automatically answer 'yes' to prompts
sudo apt-get -y install nginx
# Update package lists for available software packages.
sudo apt-get update

# Configure firewall rules (allow HTTP traffic)
sudo ufw allow 'Nginx HTTP'

# Create a dedicated Nginx configuration file for your site
sudo tee /etc/nginx/sites-available/redirect <<EOF
server {
    listen 80;
    listen [::]:80;

    server_name itzenca.tech;

    root /var/www/html;
    index index.html;

    location / {
        try_files \$uri \$uri/ =404;
    }
    
    # Redirect specific path to an external URL
    location /redirect_me {
        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
    }

    # Additional server blocks, SSL configuration, and other settings can be added here.
}
EOF

# Create a symbolic link to enable the site
sudo ln -s /etc/nginx/sites-available/redirect /etc/nginx/sites-enabled/

# Test Nginx configuration and reload
sudo nginx -t
sudo systemctl reload nginx
